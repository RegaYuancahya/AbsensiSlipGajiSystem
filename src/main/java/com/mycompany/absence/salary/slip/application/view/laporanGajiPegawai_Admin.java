/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.absence.salary.slip.application.view;

import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Font;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Document;
import com.mycompany.absence.salary.slip.application.models.Absen;
import com.mycompany.absence.salary.slip.application.models.Jabatan;
import com.mycompany.absence.salary.slip.application.models.JabatanPegawai;
import com.mycompany.absence.salary.slip.application.models.Pegawai;
import com.mycompany.absence.salary.slip.application.models.Shift;
import com.mycompany.absence.salary.slip.application.repositories.AbsenRepository;
import com.mycompany.absence.salary.slip.application.repositories.JabatanPegawaiRepository;
import com.mycompany.absence.salary.slip.application.repositories.JabatanRepository;
import com.mycompany.absence.salary.slip.application.repositories.PegawaiRepository;
import com.mycompany.absence.salary.slip.application.repositories.ShiftRepository;
import com.mycompany.absence.salary.slip.application.utils.Response;
import com.itextpdf.text.Element;

/**
 *
 * @author User
 */
public class laporanGajiPegawai_Admin extends javax.swing.JFrame {
    int xx, xy;

    PegawaiRepository pegawaiRepository = new PegawaiRepository();
    JabatanPegawaiRepository jabatanPegawaiRepository = new JabatanPegawaiRepository();
    JabatanRepository jabatanRepository = new JabatanRepository();
    AbsenRepository absenRepository = new AbsenRepository();

    private java.util.List<String> getAvailableMonthsForYear(int year) {
        java.util.Set<Integer> monthSet = new java.util.LinkedHashSet<>();
        Response<ArrayList<Pegawai>> pegawaiResp = pegawaiRepository.findAll();
        if (pegawaiResp.isSuccess()) {
            for (Pegawai p : pegawaiResp.getData()) {
                Response<ArrayList<Absen>> absenResp = absenRepository.findByIdPegawai(p.getId());
                if (absenResp.isSuccess()) {
                    for (Absen absen : absenResp.getData()) {
                        java.time.LocalDate tgl = absen.getTanggal();
                        if (tgl.getYear() == year) {
                            monthSet.add(tgl.getMonthValue());
                        }
                    }
                }
            }
        }
        // Konversi angka bulan ke nama Indonesia
        java.util.List<String> monthNames = new java.util.ArrayList<>();
        String[] indMonths = {"Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"};
        for (Integer i : monthSet) {
            if (i >= 1 && i <= 12) {
                monthNames.add(indMonths[i-1]);
            }
        }
        return monthNames;
    }

    // Tambahkan method ini untuk mengembalikan daftar tahun yang tersedia dari data absensi
    private java.util.List<Integer> getAvailableYears() {
        java.util.Set<Integer> yearSet = new java.util.TreeSet<>();
        Response<ArrayList<Pegawai>> pegawaiResp = pegawaiRepository.findAll();
        if (pegawaiResp.isSuccess()) {
            for (Pegawai p : pegawaiResp.getData()) {
                Response<ArrayList<Absen>> absenResp = absenRepository.findByIdPegawai(p.getId());
                if (absenResp.isSuccess()) {
                    for (Absen absen : absenResp.getData()) {
                        java.time.LocalDate tgl = absen.getTanggal();
                        yearSet.add(tgl.getYear());
                    }
                }
            }
        }
        return new java.util.ArrayList<>(yearSet);
    }


    /**
     * Creates new form dashboardAdmin
     */
    public laporanGajiPegawai_Admin() {
        initComponents();

        jComboBox1.addActionListener(evt -> updateGajiTables());
        jButton1.addActionListener(evt -> updateGajiTables());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sideBar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        MenuDashboardAdmin = new javax.swing.JLabel();
        MenupegawaiAdmin = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MenuJabatanAdmin = new javax.swing.JLabel();
        MenuShiftAdmin = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        MenuPerubahanShift = new javax.swing.JLabel();
        MenuDatapegawaiAdmin = new javax.swing.JLabel();
        MenuShiftpegawaiAdmin = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        MenuGajipegawaiAdmin = new javax.swing.JLabel();
        MenuLogout = new javax.swing.JLabel();
        headerAdmin = new javax.swing.JPanel();
        btmCancel = new javax.swing.JLabel();
        haloAdmin = new javax.swing.JLabel();
        panelUtama_dashboardAdmin = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 640));
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 640));

        sideBar.setBackground(new java.awt.Color(2, 84, 106));
        sideBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo pesantren (sidebar).png"))); // NOI18N

        MenuDashboardAdmin.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MenuDashboardAdmin.setForeground(new java.awt.Color(179, 201, 208));
        MenuDashboardAdmin.setText("Dashboard");
        MenuDashboardAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuDashboardAdminMouseClicked(evt);
            }
        });

        MenupegawaiAdmin.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MenupegawaiAdmin.setForeground(new java.awt.Color(179, 201, 208));
        MenupegawaiAdmin.setText("Pegawai");
        MenupegawaiAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenupegawaiAdminMouseClicked(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(179, 201, 208));
        jLabel2.setForeground(new java.awt.Color(179, 201, 208));
        jLabel2.setText("MASTER DATA");

        MenuJabatanAdmin.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MenuJabatanAdmin.setForeground(new java.awt.Color(179, 201, 208));
        MenuJabatanAdmin.setText("Jabatan");
        MenuJabatanAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuJabatanAdminMouseClicked(evt);
            }
        });

        MenuShiftAdmin.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MenuShiftAdmin.setForeground(new java.awt.Color(179, 201, 208));
        MenuShiftAdmin.setText("Shift");
        MenuShiftAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuShiftAdminMouseClicked(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(179, 201, 208));
        jLabel3.setForeground(new java.awt.Color(179, 201, 208));
        jLabel3.setText("TRANSAKSI");

        MenuPerubahanShift.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MenuPerubahanShift.setForeground(new java.awt.Color(179, 201, 208));
        MenuPerubahanShift.setText("Perubahan Shift");
        MenuPerubahanShift.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuPerubahanShiftMouseClicked(evt);
            }
        });

        MenuDatapegawaiAdmin.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MenuDatapegawaiAdmin.setForeground(new java.awt.Color(179, 201, 208));
        MenuDatapegawaiAdmin.setText("Data Pegawai");
        MenuDatapegawaiAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuDatapegawaiAdminMouseClicked(evt);
            }
        });

        MenuShiftpegawaiAdmin.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MenuShiftpegawaiAdmin.setForeground(new java.awt.Color(179, 201, 208));
        MenuShiftpegawaiAdmin.setText("Shift Pegawai");
        MenuShiftpegawaiAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuShiftpegawaiAdminMouseClicked(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(179, 201, 208));
        jLabel6.setForeground(new java.awt.Color(179, 201, 208));
        jLabel6.setText("LAPORAN");

        MenuGajipegawaiAdmin.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MenuGajipegawaiAdmin.setForeground(new java.awt.Color(255, 255, 255));
        MenuGajipegawaiAdmin.setText("Gaji Pegawai");

        MenuLogout.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MenuLogout.setForeground(new java.awt.Color(179, 201, 208));
        MenuLogout.setText("Logout");
        MenuLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuLogoutMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuLogoutMouseExited(evt);
            }
        });

        javax.swing.GroupLayout sideBarLayout = new javax.swing.GroupLayout(sideBar);
        sideBar.setLayout(sideBarLayout);
        sideBarLayout.setHorizontalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sideBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, sideBarLayout.createSequentialGroup()
                        .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(MenuDashboardAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, sideBarLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MenuDatapegawaiAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MenuPerubahanShift, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MenuJabatanAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MenupegawaiAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MenuShiftAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MenuShiftpegawaiAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MenuGajipegawaiAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MenuLogout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(sideBarLayout.createSequentialGroup()
                                .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        sideBarLayout.setVerticalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBarLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(MenuDashboardAdmin)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenupegawaiAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuJabatanAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuShiftAdmin)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuPerubahanShift)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuDatapegawaiAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuShiftpegawaiAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuGajipegawaiAdmin)
                .addGap(18, 18, 18)
                .addComponent(MenuLogout)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        headerAdmin.setBackground(new java.awt.Color(255, 255, 255));
        headerAdmin.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        headerAdmin.setPreferredSize(new java.awt.Dimension(800, 86));

        btmCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Cancel.png"))); // NOI18N
        btmCancel.setPreferredSize(new java.awt.Dimension(50, 25));
        btmCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btmCancelMouseClicked(evt);
            }
        });

        haloAdmin.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        haloAdmin.setForeground(new java.awt.Color(2, 84, 106));
        haloAdmin.setText("Halo, Admin");

        javax.swing.GroupLayout headerAdminLayout = new javax.swing.GroupLayout(headerAdmin);
        headerAdmin.setLayout(headerAdminLayout);
        headerAdminLayout.setHorizontalGroup(
            headerAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerAdminLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(haloAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 754, Short.MAX_VALUE)
                .addComponent(btmCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        headerAdminLayout.setVerticalGroup(
            headerAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerAdminLayout.createSequentialGroup()
                .addGroup(headerAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerAdminLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(haloAdmin))
                    .addGroup(headerAdminLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btmCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        panelUtama_dashboardAdmin.setPreferredSize(new java.awt.Dimension(900, 525));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(2, 84, 106));
        jLabel4.setText("Laporan Gaji Pegawai");

        jLabel7.setText("Bulan :");

        jLabel9.setText("Tahun :");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2025", "2024", "2023" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setText("CETAK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nama", "Jabatan", "Gaji Pokok", "Jumlah Masuk", "Total Gaji"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(2, 84, 106));
        jLabel5.setText("Total Gaji Bulanan Pegawai");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Bulan", "Tahun", "Total Gaji Bulan Ini"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        javax.swing.GroupLayout panelUtama_dashboardAdminLayout = new javax.swing.GroupLayout(panelUtama_dashboardAdmin);
        panelUtama_dashboardAdmin.setLayout(panelUtama_dashboardAdminLayout);
        panelUtama_dashboardAdminLayout.setHorizontalGroup(
            panelUtama_dashboardAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUtama_dashboardAdminLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panelUtama_dashboardAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelUtama_dashboardAdminLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 897, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelUtama_dashboardAdminLayout.setVerticalGroup(
            panelUtama_dashboardAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUtama_dashboardAdminLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(37, 37, 37)
                .addGroup(panelUtama_dashboardAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(sideBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)
                    .addComponent(panelUtama_dashboardAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sideBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(headerAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelUtama_dashboardAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE))
        );

        panelUtama_dashboardAdmin.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 640));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MenuPerubahanShiftMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuPerubahanShiftMouseClicked
        transaksiPerubahanShift_Admin transaksiPerubahanShift = new transaksiPerubahanShift_Admin(); // Membuat objek form tujuan
        transaksiPerubahanShift.setVisible(true);                      // Menampilkan form tujuan
        this.dispose();                                  // Menutup form saat ini (opsional)
    }//GEN-LAST:event_MenuPerubahanShiftMouseClicked

    private void MenuShiftpegawaiAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuShiftpegawaiAdminMouseClicked
        laporanShiftPegawai_Admin laporanShiftPegawai = new laporanShiftPegawai_Admin(); // Membuat objek form tujuan
        laporanShiftPegawai.setVisible(true);                      // Menampilkan form tujuan
        this.dispose(); 
    }//GEN-LAST:event_MenuShiftpegawaiAdminMouseClicked

    private void MenuDatapegawaiAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuDatapegawaiAdminMouseClicked
        laporanDataPegawai_Admin laporanDataPegawai = new laporanDataPegawai_Admin(); // Membuat objek form tujuan
        laporanDataPegawai.setVisible(true);                      // Menampilkan form tujuan
        this.dispose();
    }//GEN-LAST:event_MenuDatapegawaiAdminMouseClicked

    private void MenuDashboardAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuDashboardAdminMouseClicked
        dashboardAdmin dashboard = new dashboardAdmin(); // Membuat objek form tujuan
        dashboard.setVisible(true); // Menampilkan form tujuan
        this.dispose(); // Menutup form saat ini (opsional)
    }//GEN-LAST:event_MenuDashboardAdminMouseClicked

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        String selectedYearStr = (String) jComboBox2.getSelectedItem();
        if (selectedYearStr == null || selectedYearStr.equals("-- Pilih Tahun --")) {
            jComboBox1.removeAllItems();
            jComboBox1.addItem("-- Pilih Bulan --");
            jComboBox1.setSelectedIndex(0);
            return;
        }
        int year = Integer.parseInt(selectedYearStr);

        java.util.List<String> availableMonths = getAvailableMonthsForYear(year);
        jComboBox1.removeAllItems();
        jComboBox1.addItem("-- Pilih Bulan --");
        for (String month : availableMonths) {
            jComboBox1.addItem(month);
        }
        jComboBox1.setSelectedIndex(0); 
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Ambil periode
        String bulan = (String) jComboBox1.getSelectedItem();
        String tahun = (String) jComboBox2.getSelectedItem();

        if (bulan == null || tahun == null
                || bulan.equals("-- Pilih Bulan --") || tahun.equals("-- Pilih Tahun --")) {
            JOptionPane.showMessageDialog(this, "Silakan pilih tahun dan bulan terlebih dahulu!");
            return;
        }

        String namaFile = "Laporan_Gaji_" + bulan + "_" + tahun + ".pdf";
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setDialogTitle("Simpan Laporan Gaji sebagai PDF");
        fileChooser.setSelectedFile(new java.io.File(namaFile));
        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File fileToSave = fileChooser.getSelectedFile();
            try {
                Document document = new Document();
                PdfWriter.getInstance(document, new java.io.FileOutputStream(fileToSave));
                document.open();
                
                // 1. Header
                try {
                    java.net.URL logoUrl = getClass().getResource("/img/logoMahadBesar.png");
                    if (logoUrl != null) {
                        com.itextpdf.text.Image logo = com.itextpdf.text.Image.getInstance(logoUrl);
                        logo.scaleAbsolute(60, 60); // atur ukuran logo
                        logo.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                        document.add(logo);
                    }
                } catch (Exception e) {
                    // Jika gagal load logo, lanjutkan tanpa logo
                }

                com.itextpdf.text.Font fontTitle = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.HELVETICA, 20, com.itextpdf.text.Font.BOLD);
                com.itextpdf.text.Paragraph title = new com.itextpdf.text.Paragraph("Pondok Pesantren Baitul Hikmah", fontTitle);
                title.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                document.add(title);

                com.itextpdf.text.Font fontSub = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.HELVETICA, 12);
                com.itextpdf.text.Paragraph alamat = new com.itextpdf.text.Paragraph(
                    "JL. Medokan Asri Tengah, Medokan Ayu, Kec. Rungkut, Kota Surabaya\nHP: 089616194482", fontSub);
                alamat.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                document.add(alamat);

                com.itextpdf.text.pdf.draw.LineSeparator ls = new com.itextpdf.text.pdf.draw.LineSeparator();
                document.add(new com.itextpdf.text.Chunk(ls));

                // 1. Info Admin
                com.itextpdf.text.Font fontNormal = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.HELVETICA, 12);
                com.itextpdf.text.pdf.PdfPTable infoTable = new com.itextpdf.text.pdf.PdfPTable(new float[]{1, 3, 3});
                infoTable.setWidthPercentage(100);
                infoTable.getDefaultCell().setBorder(com.itextpdf.text.Rectangle.NO_BORDER);

                // BARIS 1
                infoTable.addCell(getCell("Nama", fontNormal, com.itextpdf.text.Element.ALIGN_LEFT));
                infoTable.addCell(getCell(": Admin", fontNormal, com.itextpdf.text.Element.ALIGN_LEFT));
                infoTable.addCell(getCell(new java.text.SimpleDateFormat("EEEE, dd MMMM yyyy").format(new java.util.Date()), fontNormal, com.itextpdf.text.Element.ALIGN_RIGHT));

                // BARIS 2
                infoTable.addCell(getCell("Jabatan", fontNormal, com.itextpdf.text.Element.ALIGN_LEFT));
                infoTable.addCell(getCell(": Owner Pesantren", fontNormal, com.itextpdf.text.Element.ALIGN_LEFT));
                infoTable.addCell(getCell("", fontNormal, com.itextpdf.text.Element.ALIGN_RIGHT));

                document.add(infoTable);

                // BARIS 3
                com.itextpdf.text.pdf.PdfPTable periodeTable = new com.itextpdf.text.pdf.PdfPTable(new float[]{1, 3});
                periodeTable.setWidthPercentage(60);
                periodeTable.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_LEFT);
                periodeTable.getDefaultCell().setBorder(com.itextpdf.text.Rectangle.NO_BORDER);

                periodeTable.addCell(getCell("Periode", fontNormal, com.itextpdf.text.Element.ALIGN_LEFT));
                periodeTable.addCell(getCell(": " + bulan + "" + tahun, fontNormal, com.itextpdf.text.Element.ALIGN_LEFT));

                document.add(periodeTable);
                document.add(new Paragraph(" ")); // spasi

                // 3. Judul dan Tabel Gaji Pegawai
                Font fontTableTitle = new Font(Font.FontFamily.HELVETICA, 14, Font.BOLD, BaseColor.BLACK);
                Paragraph judulTabel1 = new Paragraph("Tabel Gaji Pegawai", fontTableTitle);
                judulTabel1.setSpacingBefore(10f);
                document.add(judulTabel1);
                addTableToPdf(document, jTable1.getModel());

                // 4. Judul dan Tabel Total Gaji
                Paragraph judulTabel2 = new Paragraph("Rekap Total Gaji Bulan Ini", fontTableTitle);
                judulTabel2.setSpacingBefore(16f);
                document.add(judulTabel2);
                addTableToPdf(document, jTable2.getModel());

                document.close();

                JOptionPane.showMessageDialog(this, "Laporan berhasil dicetak ke PDF:\n" + fileToSave.getAbsolutePath());
                if (java.awt.Desktop.isDesktopSupported()) {
                    java.awt.Desktop.getDesktop().open(fileToSave);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Gagal mencetak ke PDF: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Helper untuk cell info (tanpa border)
    private com.itextpdf.text.pdf.PdfPCell getCell(String text, com.itextpdf.text.Font font, int alignment) {
        com.itextpdf.text.pdf.PdfPCell cell = new com.itextpdf.text.pdf.PdfPCell(new com.itextpdf.text.Phrase(text, font));
        cell.setPadding(5f);
        cell.setHorizontalAlignment(alignment);
        cell.setBorder(com.itextpdf.text.Rectangle.NO_BORDER);
        return cell;
    }

    // Helper untuk menambah tabel dari TableModel ke PDF
    private void addTableToPdf(com.itextpdf.text.Document document, javax.swing.table.TableModel model) throws com.itextpdf.text.DocumentException {
        com.itextpdf.text.Font headerFont = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.HELVETICA, 12, com.itextpdf.text.Font.BOLD, com.itextpdf.text.BaseColor.WHITE);
        com.itextpdf.text.Font cellFont = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.HELVETICA, 11, com.itextpdf.text.Font.NORMAL, com.itextpdf.text.BaseColor.BLACK);

        com.itextpdf.text.pdf.PdfPTable pdfTable = new com.itextpdf.text.pdf.PdfPTable(model.getColumnCount());
        pdfTable.setWidthPercentage(100);
        pdfTable.setSpacingBefore(10f);   // jarak atas tabel
        pdfTable.setSpacingAfter(15f);    // jarak bawah tabel

        // Add table header
        for (int i = 0; i < model.getColumnCount(); i++) {
            com.itextpdf.text.pdf.PdfPCell headerCell = new com.itextpdf.text.pdf.PdfPCell(new com.itextpdf.text.Phrase(model.getColumnName(i), headerFont));
            headerCell.setBackgroundColor(new com.itextpdf.text.BaseColor(2, 84, 106));
            headerCell.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
            headerCell.setVerticalAlignment(com.itextpdf.text.Element.ALIGN_MIDDLE);
            headerCell.setPaddingTop(8f);
            headerCell.setPaddingBottom(8f);
            headerCell.setBorderColor(new com.itextpdf.text.BaseColor(118, 158, 169));
            pdfTable.addCell(headerCell);
        }

        // Add table rows
        for (int rows = 0; rows < model.getRowCount(); rows++) {
            for (int cols = 0; cols < model.getColumnCount(); cols++) {
                Object value = model.getValueAt(rows, cols);
                String displayValue = value == null ? "" : value.toString();
                // Untuk kolom Nama Shift (biasanya index 2)
                if (cols == 2) {
                    displayValue = displayValue.replace("\n", " ").replace("\r", " ");
                }
                com.itextpdf.text.pdf.PdfPCell cell = new com.itextpdf.text.pdf.PdfPCell(new com.itextpdf.text.Phrase(displayValue, cellFont));
                cell.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                cell.setVerticalAlignment(com.itextpdf.text.Element.ALIGN_MIDDLE);
                cell.setPaddingTop(6f);
                cell.setPaddingBottom(6f);
                // Alternating row color
                if (rows % 2 == 0) {
                    cell.setBackgroundColor(new com.itextpdf.text.BaseColor(232, 245, 251));
                } else {
                    cell.setBackgroundColor(com.itextpdf.text.BaseColor.WHITE);
                }
                cell.setBorderColor(new com.itextpdf.text.BaseColor(118, 158, 169));
                pdfTable.addCell(cell);
            }
        }
        document.add(pdfTable);
    }

    private void btmCancelMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_btmCancelMouseClicked
        dispose();
    }// GEN-LAST:event_btmCancelMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_formMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }// GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_formMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }// GEN-LAST:event_formMouseDragged

    private void MenupegawaiAdminMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_MenupegawaiAdminMouseClicked
        masterPegawai_Admin dashboard = new masterPegawai_Admin(); // Membuat objek form tujuan
        dashboard.setVisible(true); // Menampilkan form tujuan
        this.dispose(); // Menutup form saat ini (opsional)
    }// GEN-LAST:event_MenupegawaiAdminMouseClicked

    private void MenuLogoutMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_MenuLogoutMouseExited

    }// GEN-LAST:event_MenuLogoutMouseExited

    private void MenuLogoutMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_MenuLogoutMouseClicked
        int confirm = javax.swing.JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin logout?",
                "Konfirmasi Logout", javax.swing.JOptionPane.YES_NO_OPTION);
        if (confirm == java.awt.event.KeyEvent.VK_Y || confirm == javax.swing.JOptionPane.YES_OPTION) {
            loginForm login = new loginForm(); // Membuat objek form tujuan
            login.setVisible(true); // Menampilkan form tujuan
            this.dispose(); // Menutup form saat ini
        }
    }// GEN-LAST:event_MenuLogoutMouseClicked

private void formWindowOpened(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowOpened
    // ISI COMBOBOX TAHUN dengan Dummy Option
    java.util.List<Integer> tahunList = getAvailableYears();
    jComboBox2.removeAllItems();
    jComboBox2.addItem("-- Pilih Tahun --");
    for (Integer th : tahunList) {
        jComboBox2.addItem(th.toString());
    }
    jComboBox2.setSelectedIndex(0);

    // ISI COMBOBOX BULAN dengan Dummy Option (kosong dulu)
    jComboBox1.removeAllItems();
    jComboBox1.addItem("-- Pilih Bulan --");
    jComboBox1.setSelectedIndex(0);

    // PASANG LISTENER
    jComboBox2.addActionListener(e -> jComboBox2ActionPerformed(null)); // saat tahun dipilih
    jComboBox1.addActionListener(e -> updateGajiTables());              // saat bulan dipilih
    jButton1.addActionListener(e -> updateGajiTables());                // tombol cetak
}// GEN-LAST:event_formWindowOpened

    private void MenuJabatanAdminMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_MenuJabatanAdminMouseClicked
        masterJabatan_Admin dashboard = new masterJabatan_Admin(); // Membuat objek form tujuan
        dashboard.setVisible(true); // Menampilkan form tujuan
        this.dispose(); // Menutup form saat ini (opsional)
    }// GEN-LAST:event_MenuJabatanAdminMouseClicked

    private void MenuShiftAdminMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_MenuShiftAdminMouseClicked
        masterShift_Admin dashboard = new masterShift_Admin(); // Membuat objek form tujuan
        dashboard.setVisible(true); // Menampilkan form tujuan
        this.dispose(); // Menutup form saat ini (opsional)
    }// GEN-LAST:event_MenuShiftAdminMouseClicked

    private void updateGajiTables() {
        String selectedYearStr = (String) jComboBox2.getSelectedItem();
        String selectedMonthStr = (String) jComboBox1.getSelectedItem();

        if (selectedYearStr == null || selectedMonthStr == null
            || selectedYearStr.equals("-- Pilih Tahun --")
            || selectedMonthStr.equals("-- Pilih Bulan --")) {
            // Bersihkan tabel
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new String[]{"Nama", "Jabatan", "Gaji Pokok", "Jumlah Masuk", "Total Gaji"}, 0));
            jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new String[]{"Bulan", "Tahun", "Total Gaji Bulan Ini"}, 0));
            return;
        }

        int year = Integer.parseInt(selectedYearStr);
        int month = -1;
        String[] indMonths = {"Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"};
        for (int i = 0; i < indMonths.length; i++) {
            if (indMonths[i].equalsIgnoreCase(selectedMonthStr)) {
                month = i+1; break;
            }
        }
        if (month == -1) return;

        // ====== Table 1: Laporan Per Pegawai ======
        String[] columnNames = {"Nama", "Jabatan", "Gaji Pokok", "Jumlah Masuk", "Total Gaji"};
        DefaultTableModel modelPegawai = new DefaultTableModel(columnNames, 0);

        Response<ArrayList<Pegawai>> pegawaiResp = pegawaiRepository.findAll();
        double totalAll = 0;
        if (pegawaiResp.isSuccess()) {
            for (Pegawai p : pegawaiResp.getData()) {
                if (p.getIsAdmin()) continue;
                // Cari jabatan
                Response<ArrayList<JabatanPegawai>> jpResp = jabatanPegawaiRepository.findByPegawaiId(p.getId());
                String jabatanNama = "";
                double gajiPokok = 0;
                if (jpResp.isSuccess() && !jpResp.getData().isEmpty()) {
                    JabatanPegawai jp = jpResp.getData().get(0);
                    Response<Jabatan> jbtResp = jabatanRepository.findById(jp.getIdJabatan());
                    if (jbtResp.isSuccess()) {
                        Jabatan j = jbtResp.getData();
                        jabatanNama = j.getNamaJabatan();
                        if (j.getGajiPokok() != null) gajiPokok = j.getGajiPokok();
                    }
                }
                // Hitung absensi di bulan & tahun tsb
                int jumlahMasuk = 0;
                Response<ArrayList<Absen>> absenResp = absenRepository.findByIdPegawai(p.getId());
                if (absenResp.isSuccess()) {
                    for (Absen ab : absenResp.getData()) {
                        java.time.LocalDate tgl = ab.getTanggal();
                        if (tgl.getYear() == year && tgl.getMonthValue() == month) {
                            jumlahMasuk++;
                        }
                    }
                }
                double totalGaji = jumlahMasuk * gajiPokok;
                totalAll += totalGaji;

                modelPegawai.addRow(new Object[]{
                    p.getNama(),
                    jabatanNama,
                    gajiPokok,
                    jumlahMasuk,
                    totalGaji
                });
            }
        }
        jTable1.setModel(modelPegawai);

        // ====== Table 2: Rekap Total Gaji Bulan Ini ======
        String[] colTotal = {"Bulan", "Tahun", "Total Gaji Bulan Ini"};
        DefaultTableModel modelTotal = new DefaultTableModel(colTotal, 0);
        modelTotal.addRow(new Object[]{selectedMonthStr, selectedYearStr, totalAll});
        jTable2.setModel(modelTotal);
    }



    private void populateGajiTable() {
        String selectedMonth = (String) jComboBox1.getSelectedItem(); // Bulan (ID)
        String selectedYear = (String) jComboBox2.getSelectedItem(); // Tahun

        if (selectedMonth == null || selectedYear == null) return;

        int tahun = Integer.parseInt(selectedYear);
        int bulanIndex = jComboBox1.getSelectedIndex() + 1; // bulan 1-12

        PegawaiRepository pegawaiRepo = new PegawaiRepository();
        JabatanPegawaiRepository jpRepo = new JabatanPegawaiRepository();
        JabatanRepository jabatanRepo = new JabatanRepository();
        AbsenRepository absenRepo = new AbsenRepository();

        Response<ArrayList<Pegawai>> pegawaiResp = pegawaiRepo.findAll();
        if (!pegawaiResp.isSuccess()) return;

        DefaultTableModel model = new DefaultTableModel(new String[]{
            "Nama", "Jabatan", "Gaji Pokok", "Jumlah Masuk", "Total Gaji"
        }, 0);

        double totalGajiSeluruhPegawai = 0;

        for (Pegawai p : pegawaiResp.getData()) {
            if (p.getIsAdmin()) continue;

            // Jabatan
            String namaJabatan = "-";
            double gajiPokok = 0;
            Response<ArrayList<JabatanPegawai>> jpResp = jpRepo.findByPegawaiId(p.getId());
            if (jpResp.isSuccess() && !jpResp.getData().isEmpty()) {
                JabatanPegawai jp = jpResp.getData().get(0);
                Response<Jabatan> jResp = jabatanRepo.findById(jp.getIdJabatan());
                if (jResp.isSuccess()) {
                    namaJabatan = jResp.getData().getNamaJabatan();
                    gajiPokok = jResp.getData().getGajiPokok() != null ? jResp.getData().getGajiPokok() : 0;
                }
            }

            // Absen
            int jumlahMasuk = 0;
            Response<ArrayList<Absen>> absenResp = absenRepo.findByIdPegawai(p.getId());
            if (absenResp.isSuccess()) {
                for (Absen ab : absenResp.getData()) {
                    if (ab.getTanggal().getYear() == tahun && ab.getTanggal().getMonthValue() == bulanIndex) {
                        jumlahMasuk++;
                    }
                }
            }

            double totalGaji = gajiPokok * jumlahMasuk;
            totalGajiSeluruhPegawai += totalGaji;

            model.addRow(new Object[]{
                p.getNama(), namaJabatan, gajiPokok, jumlahMasuk, totalGaji
            });
        }

        jTable1.setModel(model);

        // Set total rekap ke jTable2
        DefaultTableModel totalModel = new DefaultTableModel(new String[]{
            "Bulan", "Tahun", "Total Gaji Bulan Ini"
        }, 0);
        totalModel.addRow(new Object[]{
            selectedMonth, selectedYear, totalGajiSeluruhPegawai
        });
        jTable2.setModel(totalModel);
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(laporanGajiPegawai_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(laporanGajiPegawai_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(laporanGajiPegawai_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(laporanGajiPegawai_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new laporanGajiPegawai_Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MenuDashboardAdmin;
    private javax.swing.JLabel MenuDatapegawaiAdmin;
    private javax.swing.JLabel MenuGajipegawaiAdmin;
    private javax.swing.JLabel MenuJabatanAdmin;
    private javax.swing.JLabel MenuLogout;
    private javax.swing.JLabel MenuPerubahanShift;
    private javax.swing.JLabel MenuShiftAdmin;
    private javax.swing.JLabel MenuShiftpegawaiAdmin;
    private javax.swing.JLabel MenupegawaiAdmin;
    private javax.swing.JLabel btmCancel;
    private javax.swing.JLabel haloAdmin;
    private javax.swing.JPanel headerAdmin;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel panelUtama_dashboardAdmin;
    private javax.swing.JPanel sideBar;
    // End of variables declaration//GEN-END:variables
}