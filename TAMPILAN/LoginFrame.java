
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;

public class LoginFrame extends JFrame {

    // Variabel untuk menyimpan informasi pengguna yang login
    private int loggedInUserId;
    private String loggedInUserName;
    private String loggedInUserRole;
    private JLabel lblBaitulhikmah;
    private JLabel lblLoginTitle;
    private JTextField txtUsername;
    private JPasswordField txtPassword;

    /**
     * Creates new form LoginFrame
     */
    public LoginFrame() {
        initComponents(); // Panggil metode yang dibuat NetBeans (atau yang kita tiru)
        setTitle("Login Aplikasi Absensi & Slip Gaji");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        // Ukuran frame diatur dalam initComponents atau setelahnya jika diperlukan
        setLocationRelativeTo(null); // Menampilkan frame di tengah layar
        setResizable(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */    


    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMainLogin = new javax.swing.JPanel();
        panelLogin = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblWelcomeSubtitle = new javax.swing.JLabel();
        lblCreatedBy = new javax.swing.JLabel();
        lblWelcomeTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        chkShowPassword = new javax.swing.JCheckBox();
        txtPassword = new javax.swing.JPasswordField();
        txtUsername = new javax.swing.JTextField();
        lblLoginTitle = new javax.swing.JLabel();
        lblBaitulhikmah = new javax.swing.JLabel();
        lblPondok = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(725, 600));

        panelMainLogin.setBackground(new java.awt.Color(255, 255, 255));

        panelLogin.setBackground(new java.awt.Color(0, 102, 102));

        lblWelcomeSubtitle.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        lblWelcomeSubtitle.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcomeSubtitle.setText("DI APLIKASI ABSENSI DAN SLIP GAJI");

        lblCreatedBy.setBackground(new java.awt.Color(255, 255, 255));
        lblCreatedBy.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCreatedBy.setForeground(new java.awt.Color(255, 255, 0));
        lblCreatedBy.setText("CREATED BY KELOMPOK 2 PBO");

        lblWelcomeTitle.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        lblWelcomeTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcomeTitle.setText("SELAMAT DATANG");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ASSEST/icon.png"))); // NOI18N

        javax.swing.GroupLayout panelLoginLayout = new javax.swing.GroupLayout(panelLogin);
        panelLogin.setLayout(panelLoginLayout);
        panelLoginLayout.setHorizontalGroup(
            panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoginLayout.createSequentialGroup()
                .addGroup(panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLoginLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLoginLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(lblWelcomeTitle))
                            .addComponent(lblWelcomeSubtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelLoginLayout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(lblCreatedBy, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelLoginLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(188, 188, 188)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelLoginLayout.setVerticalGroup(
            panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLoginLayout.createSequentialGroup()
                .addGroup(panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLoginLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(144, 144, 144))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLoginLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(29, 29, 29)))
                .addComponent(lblWelcomeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWelcomeSubtitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCreatedBy)
                .addGap(160, 160, 160))
        );

        btnLogin.setText("LOGIN");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        chkShowPassword.setText("Show Password");
        chkShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkShowPasswordActionPerformed(evt);
            }
        });

        txtPassword.setText("jPasswordField1");
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        txtUsername.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 18)); // NOI18N
        txtUsername.setText("Username");
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        lblLoginTitle.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblLoginTitle.setForeground(new java.awt.Color(0, 102, 102));
        lblLoginTitle.setText("Login");

        lblBaitulhikmah.setFont(new java.awt.Font("Rockwell", 3, 18)); // NOI18N
        lblBaitulhikmah.setForeground(new java.awt.Color(0, 102, 102));
        lblBaitulhikmah.setText("baitul Hikmah");

        lblPondok.setFont(new java.awt.Font("Rockwell", 3, 18)); // NOI18N
        lblPondok.setForeground(new java.awt.Color(0, 102, 102));
        lblPondok.setText("Pondok Pesantren");

        javax.swing.GroupLayout panelMainLoginLayout = new javax.swing.GroupLayout(panelMainLogin);
        panelMainLogin.setLayout(panelMainLoginLayout);
        panelMainLoginLayout.setHorizontalGroup(
            panelMainLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLoginLayout.createSequentialGroup()
                .addComponent(panelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelMainLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMainLoginLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(panelMainLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chkShowPassword)
                            .addComponent(btnLogin)
                            .addGroup(panelMainLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblLoginTitle)
                                .addGroup(panelMainLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(panelMainLoginLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(panelMainLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBaitulhikmah, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPondok, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMainLoginLayout.setVerticalGroup(
            panelMainLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMainLoginLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(lblPondok)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBaitulhikmah)
                .addGap(141, 141, 141)
                .addComponent(lblLoginTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chkShowPassword)
                .addGap(33, 33, 33)
                .addComponent(btnLogin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelMainLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panelMainLogin, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkShowPasswordActionPerformed
        GridBagConstraints gbcLeft;
        GridBagConstraints gbcRight;

        JPanel panelMainLogin = new JPanel();
        JPanel panelLeft = new JPanel();
        JLabel lblLogo = new JLabel();
        JLabel lblSelamatDatang = new JLabel();
        JLabel lblAplikasiDesc = new JLabel();
        JLabel lblCreatedBy = new JLabel();
        JPanel panelRight = new JPanel();
        JLabel lblPondok = new JLabel();
        lblBaitulhikmah = new JLabel();
        lblLoginTitle = new JLabel();
        JLabel lblUsernameLabel = new JLabel(); // Deklarasi lokal karena hanya untuk label
        txtUsername = new JTextField();
        JLabel lblPasswordLabel = new JLabel(); // Deklarasi lokal
        txtPassword = new JPasswordField();
        JCheckBox chkShowPassword = new JCheckBox();
        JButton btnLogin = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login Aplikasi Absensi & Slip Gaji");
        setPreferredSize(new Dimension(900, 600)); // Set preferred size

        // Panel Utama
        panelMainLogin.setLayout(new GridLayout(1, 2));

        // Panel Kiri (Logo dan Selamat Datang)
        panelLeft.setBackground(new Color(20, 90, 90));
        panelLeft.setLayout(new GridBagLayout());
        gbcLeft = new GridBagConstraints();
        gbcLeft.insets = new Insets(10, 10, 10, 10);
        gbcLeft.gridwidth = GridBagConstraints.REMAINDER;
        gbcLeft.anchor = GridBagConstraints.CENTER;

        // Logo
        try {
            URL logoUrl = getClass().getClassLoader().getResource("ASSETS/logo_pesantren.png");
            if (logoUrl != null) {
                ImageIcon logoIcon = new ImageIcon(logoUrl);
                Image image = logoIcon.getImage();
                Image newimg = image.getScaledInstance(200, 200, java.awt.Image.SCALE_SMOOTH);
                logoIcon = new ImageIcon(newimg);
                lblLogo.setIcon(logoIcon);
            } else {
                lblLogo.setText("Logo Pesantren (Tidak ditemukan)");
                lblLogo.setForeground(Color.WHITE);
                lblLogo.setFont(new Font("Arial", Font.BOLD, 16));
            }
        } catch (Exception e) {
            lblLogo.setText("Gagal memuat logo");
            lblLogo.setForeground(Color.RED);
            System.err.println("Error loading logo: " + e.getMessage());
        }
        lblLogo.setHorizontalAlignment(SwingConstants.CENTER);
        gbcLeft.gridy = 0;
        panelLeft.add(lblLogo, gbcLeft);

        lblSelamatDatang.setFont(new Font("Arial", Font.BOLD, 28));
        lblSelamatDatang.setForeground(Color.WHITE);
        lblSelamatDatang.setText("SELAMAT DATANG");
        gbcLeft.gridy = 1;
        gbcLeft.insets = new Insets(20, 10, 5, 10);
        panelLeft.add(lblSelamatDatang, gbcLeft);

        lblAplikasiDesc.setFont(new Font("Arial", Font.PLAIN, 16));
        lblAplikasiDesc.setForeground(Color.WHITE);
        lblAplikasiDesc.setText("DI APLIKASI ABSENSI DAN SLIP GAJI");
        gbcLeft.gridy = 2;
        gbcLeft.insets = new Insets(5, 10, 20, 10);
        panelLeft.add(lblAplikasiDesc, gbcLeft);

        lblCreatedBy.setFont(new Font("Arial", Font.PLAIN, 12));
        lblCreatedBy.setForeground(Color.YELLOW);
        lblCreatedBy.setText("CREATED BY KELOMPOK 2 PBO");
        gbcLeft.gridy = 3;
        gbcLeft.insets = new Insets(10, 10, 10, 10);
        panelLeft.add(lblCreatedBy, gbcLeft);

        panelMainLogin.add(panelLeft);

        // Panel Kanan (Form Login)
        panelRight.setBackground(Color.WHITE);
        panelRight.setLayout(new GridBagLayout());
        gbcRight = new GridBagConstraints();
        gbcRight.insets = new Insets(10, 20, 10, 20);
        gbcRight.fill = GridBagConstraints.HORIZONTAL;

        lblPondok.setFont(new Font("Times New Roman", Font.PLAIN, 18));
        lblPondok.setForeground(new Color(0, 100, 100));
        lblPondok.setHorizontalAlignment(SwingConstants.CENTER);
        lblPondok.setText("Pondok Pesantren");
        gbcRight.gridx = 0;
        gbcRight.gridy = 0;
        gbcRight.gridwidth = 2;
        panelRight.add(lblPondok, gbcRight);

        lblBaitulhikmah.setFont(new Font("Times New Roman", Font.BOLD, 22));
        lblBaitulhikmah.setForeground(new Color(0, 100, 100));
        lblBaitulhikmah.setHorizontalAlignment(SwingConstants.CENTER);
        lblBaitulhikmah.setText("baitul Hikmah");
        gbcRight.gridy = 1;
        panelRight.add(lblBaitulhikmah, gbcRight);

        lblLoginTitle.setFont(new Font("Arial", Font.BOLD, 36));
        lblLoginTitle.setForeground(new Color(0, 70, 150));
        lblLoginTitle.setHorizontalAlignment(SwingConstants.CENTER);
        lblLoginTitle.setText("Login");
        gbcRight.gridy = 2;
        gbcRight.insets = new Insets(20, 20, 20, 20);
        panelRight.add(lblLoginTitle, gbcRight);

        gbcRight.insets = new Insets(5, 20, 5, 20);
        gbcRight.gridwidth = 1;

        lblUsernameLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        lblUsernameLabel.setText("Username:");
        gbcRight.gridx = 0;
        gbcRight.gridy = 3;
        gbcRight.anchor = GridBagConstraints.WEST;
        panelRight.add(lblUsernameLabel, gbcRight);

        txtUsername.setFont(new Font("Arial", Font.PLAIN, 14));
        txtUsername.setColumns(20);
        gbcRight.gridx = 0;
        gbcRight.gridy = 4;
        gbcRight.gridwidth = 2;
        panelRight.add(txtUsername, gbcRight);
        txtUsername.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        lblPasswordLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        lblPasswordLabel.setText("Password:");
        gbcRight.gridx = 0;
        gbcRight.gridy = 5;
        gbcRight.gridwidth = 1;
        gbcRight.anchor = GridBagConstraints.WEST;
        panelRight.add(lblPasswordLabel, gbcRight);

        txtPassword.setFont(new Font("Arial", Font.PLAIN, 14));
        txtPassword.setColumns(20);
        gbcRight.gridx = 0;
        gbcRight.gridy = 6;
        gbcRight.gridwidth = 2;
        panelRight.add(txtPassword, gbcRight);
        txtPassword.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        chkShowPassword.setBackground(Color.WHITE);
        chkShowPassword.setFont(new Font("Arial", Font.PLAIN, 12));
        chkShowPassword.setText("Show Password");
        gbcRight.gridx = 0;
        gbcRight.gridy = 7;
        gbcRight.gridwidth = 2;
        gbcRight.anchor = GridBagConstraints.EAST;
        panelRight.add(chkShowPassword, gbcRight);
        chkShowPassword.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                chkShowPasswordActionPerformed(evt);
            }
        });

        btnLogin.setBackground(new Color(0, 120, 215));
        btnLogin.setFont(new Font("Arial", Font.BOLD, 16));
        btnLogin.setForeground(Color.WHITE);
        btnLogin.setText("LOGIN");
        gbcRight.gridx = 0;
        gbcRight.gridy = 8;
        gbcRight.gridwidth = 2;
        gbcRight.fill = GridBagConstraints.HORIZONTAL;
        gbcRight.insets = new Insets(20, 20, 10, 20);
        panelRight.add(btnLogin, gbcRight);
        btnLogin.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        panelMainLogin.add(panelRight);

        // Menambahkan panelMainLogin ke Frame
        // Cara NetBeans biasanya menggunakan GroupLayout untuk JFrame contentPane
        // Kita akan menambahkannya secara langsung untuk kesederhanaan,
        // atau Anda bisa menggunakan GroupLayout jika ingin lebih presisi seperti NetBeans.
        // Untuk sekarang, kita set content pane secara langsung.
        setContentPane(panelMainLogin); // Mengatur panelMainLogin sebagai content pane utama

        pack(); // Menyesuaikan ukuran frame dengan komponen di dalamnya
        setLocationRelativeTo(null); // Pusatkan frame setelah pack() 
    }//GEN-LAST:event_chkShowPasswordActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        String username = txtUsername.getText();
        String password = new String(txtPassword.getPassword());

        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username dan Password tidak boleh kosong!", "Error Login", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // --- AWAL BAGIAN YANG PERLU DIGANTI DENGAN LOGIKA DATABASE ---
        // Contoh logika sederhana (GANTI DENGAN LOGIKA DATABASE YANG BENAR)
        // Sebaiknya proses login ini dipindahkan ke kelas terpisah (misal: AuthController)
        // Untuk menjaga LoginFrame tetap fokus pada tampilan.

        // Simulasi pengecekan ke database
        // Ganti bagian ini dengan koneksi JDBC dan query ke tabel Pegawai
        // Ingat untuk menggunakan NIP sebagai username jika itu yang dimaksud
        // Dan implementasikan hashing password
        if (username.equals("admin") && password.equals("admin123")) {
            this.loggedInUserId = 1; 
            this.loggedInUserName = "Admin Pesantren"; // Ambil dari DB
            this.loggedInUserRole = "Admin"; // Ambil dari DB (kolom role_admin: true/1)

            JOptionPane.showMessageDialog(this, "Login berhasil sebagai Admin!", "Login Sukses", JOptionPane.INFORMATION_MESSAGE);
            // TODO: Buka frame dashboard Admin
            // Contoh: new AdminDashboardFrame(this).setVisible(true); // Kirim instance LoginFrame jika perlu
            this.dispose(); 

        } else if (username.equals("pegawai") && password.equals("pegawai123")) { 
            this.loggedInUserId = 2; 
            this.loggedInUserName = "Nama Pegawai"; // Ambil dari DB
            this.loggedInUserRole = "Pegawai"; // Ambil dari DB (kolom role_admin: false/0)

            JOptionPane.showMessageDialog(this, "Login berhasil sebagai Pegawai!", "Login Sukses", JOptionPane.INFORMATION_MESSAGE);
            // TODO: Buka frame dashboard Pegawai
            // Contoh: new PegawaiDashboardFrame(this).setVisible(true);
            this.dispose(); 
        } else {
            JOptionPane.showMessageDialog(this, "Username atau Password salah!", "Error Login", JOptionPane.ERROR_MESSAGE);
        }
        // --- AKHIR BAGIAN YANG PERLU DIGANTI DENGAN LOGIKA DATABASE ---
                  
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
       btnLoginActionPerformed(evt); // Coba login jika Enter ditekan di field password
       txtPassword.requestFocus(); // Pindah fokus ke field password jika Enter ditekan
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        String username = txtUsername.getText().trim();
        String password = new String(txtPassword.getPassword());

        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username dan Password tidak boleh kosong!", "Login Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            // Asumsi DatabaseConnection.java ada di package GUI dan memiliki method getConnection()
            conn = DatabaseConnection.getConnection();
            if (conn == null) {
                // Pesan error koneksi sudah ditangani di DatabaseConnection,
                // atau Anda bisa tambahkan pesan spesifik di sini.
                JOptionPane.showMessageDialog(this, "Koneksi ke database gagal. Pastikan database server berjalan.", "Database Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String sql = "SELECT id_pengguna, peran, nama_lengkap, username FROM pengguna WHERE username = ? AND password = ?";
            // PERHATIAN: Dalam aplikasi produksi, password HARUS di-hash sebelum disimpan dan dibandingkan.
            // Contoh jika password di-hash di database:
            // String sql = "SELECT id_pengguna, peran, nama_lengkap, username FROM pengguna WHERE username = ? AND password = SHA2(?, 256)"; // Ganti SHA2 dengan metode hash Anda

            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, username);
            pstmt.setString(2, password); // Jika di-hash, Anda juga mengirim password yang sudah di-hash atau menghash di query

            rs = pstmt.executeQuery();

            if (rs.next()) {
                // Simpan informasi pengguna yang login ke variabel statis (atau cara manajemen sesi lain)
                LoginFrame.loggedInUserId = rs.getInt("id_pengguna");
                LoginFrame.loggedInUserRole = rs.getString("peran");
                LoginFrame.loggedInUserName = rs.getString("nama_lengkap");
                rs.getString("username"); // Menyimpan username jika diperlukan

                JOptionPane.showMessageDialog(this, "Login Berhasil! Selamat datang " + LoginFrame.loggedInUserName, "Login Sukses", JOptionPane.INFORMATION_MESSAGE);

                // Navigasi berdasarkan peran
                if ("admin".equalsIgnoreCase(LoginFrame.loggedInUserRole)) {
                    // Jika AdminDashboard memerlukan informasi pengguna, kirimkan melalui konstruktor
                    // AdminDashboard adminDashboard = new AdminDashboard(LoginFrame.loggedInUserId, LoginFrame.loggedInUserName);
                    AdminDashboard adminDashboard = new AdminDashboard(); // Panggil konstruktor default jika tidak perlu parameter
                    adminDashboard.setVisible(true);
                } else if ("pegawai".equalsIgnoreCase(LoginFrame.loggedInUserRole)) {
                    PegawaiDashboard pegawaiDashboard = new PegawaiDashboard(LoginFrame.loggedInUserId, LoginFrame.loggedInUserName);
                    pegawaiDashboard.setVisible(true);
                } else {
                    // Peran tidak dikenal, bisa jadi error atau data tidak valid
                    JOptionPane.showMessageDialog(this, "Peran pengguna tidak dikenal: " + LoginFrame.loggedInUserRole, "Error Peran", JOptionPane.ERROR_MESSAGE);
                    return; // Jangan tutup frame login jika peran tidak jelas
                }
                this.dispose(); // Tutup frame login setelah navigasi berhasil
            } else {
                JOptionPane.showMessageDialog(this, "Username atau Password salah!", "Login Gagal", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error saat proses login: " + e.getMessage(), "Kesalahan Database", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // Penting untuk debugging di console NetBeans
        } finally {
            // Selalu tutup ResultSet, PreparedStatement (Connection ditutup saat aplikasi exit atau dikelola terpusat)
            try {
                if (rs != null) rs.close();
                if (pstmt != null) pstmt.close();
                // Sebaiknya koneksi tidak ditutup di sini jika akan digunakan oleh frame lain
                // atau jika DatabaseConnection.java mengelola koneksi tunggal.
                // DatabaseConnection.closeConnection(); // Hanya jika setiap operasi membuka dan menutup koneksi sendiri.
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }                                        
    }//GEN-LAST:event_btnLoginActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JCheckBox chkShowPassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblBaitulhikmah;
    private javax.swing.JLabel lblCreatedBy;
    private javax.swing.JLabel lblLoginTitle;
    private javax.swing.JLabel lblPondok;
    private javax.swing.JLabel lblWelcomeSubtitle;
    private javax.swing.JLabel lblWelcomeTitle;
    private javax.swing.JPanel panelLogin;
    private javax.swing.JPanel panelMainLogin;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
